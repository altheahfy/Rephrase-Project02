/* 基本レイアウト設定 */
body {
  min-height: 100vh; /* ビューポート全体の高さを確保 */
  margin: 0;
  padding: 20px;
  font-family: Arial, sans-serif;
}

/* 右上のファイル選択・ロードエリアのスタイル */
#file-load-area {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  gap: 5px;
  min-width: 180px;
}

#file-load-area input[type="file"] {
  border: 1px solid #ccc;
  border-radius: 3px;
  padding: 3px;
}

#file-load-area button:hover {
  background-color: #1976D2;
}

/* 解答全文トグルボタンのスタイル */
#toggle-dynamic-area {
  transition: background-color 0.3s ease;
}

#toggle-dynamic-area:hover {
  opacity: 0.8;
}

#toggle-dynamic-area:active {
  transform: scale(0.95);
}

/* 基本的なタイトル要素の余白調整 */
h1 {
  margin-top: 20px;
  margin-bottom: 15px;
}

h2 {
  margin-top: 20px;
  margin-bottom: 15px;
}

/* スロット画像（複数対応）の共通スタイル */
.slot-image {
  display: inline-block;
  margin-right: 4px;
  max-height: 150px !important; /* 強制適用 */
  max-width: 160px !important; /* 幅も制限 */
  min-height: 120px !important; /* 最小高さを保証 */
  min-width: 120px !important; /* 最小幅を保証 */
  vertical-align: middle;
}

/* スロット全体の調整が必要な場合に備えた汎用クラス */
.slot-container {
  /* 🎯 CSS Gridで完全に6行固定レイアウトを実装 */
  display: grid;
  grid-template-rows: 30px 180px 20px 25px 25px 25px; /* 画像行を120px → 180px にさらに拡大 */
  grid-template-columns: 1fr;
  gap: 4px; /* 行間の固定間隔 */
  align-items: center; /* 各セル内での中央揃え */
  justify-items: center; /* 各セル内での中央揃え */
  
  /* order属性への対応を追加 */
  order: 0; /* デフォルト値 */
  border: 1px solid #eee; /* 境界線を追加して区別しやすく */
  padding: 10px;
  margin: 4px 4px 15px 4px; /* 下部マージンを拡大して境界線との距離を確保 */
  
  /* 🆕 動的幅調整システム */
  min-width: 120px; /* 最小幅を縮小 */
  width: auto; /* 自動幅調整 */
  max-width: 400px; /* 最大幅を拡大 */
  flex: 0 0 auto; /* flexアイテムとして自動サイズ */
  
  /* 空判定時の非表示制御 */
  transition: opacity 0.2s ease-out, width 0.3s ease; /* 幅変更もアニメーション */
  
  /* 🎯 完全固定高さ - 新しいgrid構造に合わせて調整 */
  height: 220px; /* 30+75+20+25+25+25+gap+padding */
  box-sizing: border-box;
}

/* 🎯 Grid行1: スロット名（必ず1番目に配置） */
.slot-container label {
  grid-row: 1;
  grid-column: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%; /* セル高さを完全に使用 */
  font-size: 18px; /* フォントサイズを拡大 */
  font-weight: bold;
  color: #333;
  text-align: center;
  margin: 0;
  padding: 0;
  line-height: 1.2;
}

/* 🎯 Grid行2: イラスト領域（必ず2番目に配置） */
.slot-container .slot-image {
  grid-row: 2;
  grid-column: 1;
  display: block;
  width: 160px !important; /* 強制適用 */
  height: 150px !important; /* 強制適用 */
  max-width: 160px !important;
  max-height: 150px !important;
  min-width: 120px !important;
  min-height: 120px !important;
  object-fit: contain;
  margin: 0;
  padding: 0;
  /* イラストが無い場合の透明スペース確保 */
  background: transparent;
  border: 1px solid #f0f0f0; /* 枠を追加してサイズを視覚化 */
}

/* 🎯 Grid行3: 英語テキスト（必ず3番目に配置） */
.slot-container .slot-text {
  grid-row: 3;
  grid-column: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%; /* セル高さを完全に使用 */
  font-size: 11px; /* 日本語補助テキスト用に小さく */
  font-weight: 400;
  color: #777;
  text-align: center;
  margin: 0;
  padding: 4px;
  line-height: 1.1;
  /* 長いテキストの折り返し */
  word-wrap: break-word;
  overflow-wrap: break-word;
  hyphens: auto;
}

/* 🎯 Grid行4: 日本語補助テキスト（必ず4番目に配置） */
.slot-container .slot-phrase {
  grid-row: 4;
  grid-column: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%; /* セル高さを完全に使用 */
  font-size: 16px; /* 🆕 フォントサイズを調整 */
  font-weight: 600;
  color: #222;
  text-align: center;
  margin: 0;
  padding: 2px; /* 🆕 パディングを追加 */
  line-height: 1.2;
  
  /* 🆕 長いテキスト対応 */
  word-wrap: break-word;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: normal; /* 改行を許可 */
  
  /* 🆕 例文テキストエリアを明確にする薄いオレンジの背景と黒い線 */
  background-color: #ffd6a5;
  border-top: 1px solid #000;
  border-bottom: 1px solid #000;
}

/* スロット順序制御用 - JS側でdata-order属性を設定した場合の優先度 */
[data-order] {
  order: attr(data-order number, 0);
}


/* Slot label for identifying slotKey (e.g., m1, s, o1) */
.slot-label {
  font-size: 12px;
  font-weight: bold;
  color: #444;
  margin-bottom: 4px;
}


/* 非表示制御用クラス */
.hidden {
  display: none;
}

.slot-wrapper {
  display: flex;
  flex-wrap: wrap;
  gap: 16px;
  margin-bottom: 16px;
  flex-direction: column; /* 上から下への流れを確保 */
}

/* subslot 表示安定化のための共通構造 */
.subslot {
  min-width: 80px;
  min-height: 100px;
  padding: 4px;
  margin: 4px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* .subslot内の画像も大きくする */
.subslot .slot-image {
  width: 160px !important; /* 強制適用 */
  height: 150px !important; /* 強制適用 */
  max-width: 160px !important;
  max-height: 150px !important;
  min-width: 120px !important;
  min-height: 120px !important;
  object-fit: contain;
}

/* サブスロット展開エリアは初期状態では非表示に */
[id^="slot-"][id$="-sub"] {
  display: none !important; /* 初期状態では必ず非表示 */
  visibility: hidden; /* 視覚的にも隠す */
}

/* JavaScriptで表示された場合のみ有効になるスタイル */
[id^="slot-"][id$="-sub"].visible {
  display: flex !important;
  flex-wrap: wrap; /* サブスロットが多すぎる場合に折り返す */
  gap: 8px; /* サブスロット間の隙間 */
  visibility: visible !important;
  align-content: flex-start; /* 🆕 折り返した行を上詰めで配置し、不要な空間を防ぐ */
}

/* 高さ潰れ・透明化・折り返し不備の対処 */
.slot-wrapper {
  min-height: 100px;
  visibility: visible;
  flex-wrap: nowrap; /* 🆕 横並びで折り返さない */
  flex-direction: row !important; /* 強制的に横並びに */
  display: flex !important; /* flex表示を強制 */
  align-items: flex-start;
  justify-content: flex-start; /* 左揃え */
  gap: 12px; /* スロット間の間隔 */
  
  /* 🆕 横スクロール対応 */
  overflow-x: auto; /* 横スクロールを有効化 */
  overflow-y: hidden; /* 縦スクロールは無効 */
  padding-bottom: 10px; /* スクロールバー用の余白 */
  
  /* 🆕 スクロールバーのスタイル改善（Webkit系ブラウザ） */
  scrollbar-width: thin; /* Firefox */
}

/* 🆕 Webkit系ブラウザでのスクロールバースタイル */
.slot-wrapper::-webkit-scrollbar {
  height: 8px;
}

.slot-wrapper::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 4px;
}

.slot-wrapper::-webkit-scrollbar-thumb {
  background: #c1c1c1;
  border-radius: 4px;
}

.slot-wrapper::-webkit-scrollbar-thumb:hover {
  background: #a1a1a1;
}
/* subslot 内のラベル表示用スタイル */
.subslot label {
  display: block;
  font-size: 13px;
  font-weight: bold;
  margin-bottom: 4px;
  color: #333;
  text-align: center;
}


/* 🎯 Grid行5: 詳細ボタン（必ず5番目に配置）- サブスロット有無で動的表示 */
.slot-container .subslot-toggle-button {
  grid-row: 5;
  grid-column: 1;
  width: 100%;
  height: 100%; /* セル高さを完全に使用 */
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.slot-container .subslot-toggle-button button {
  font-size: 10px;
  padding: 2px 8px;
  margin: 0;
  min-height: 18px;
  background-color: #4a90e2;
  color: white;
  border: none;
  border-radius: 3px;
  cursor: pointer;
}

/* 🎯 Grid行6: 個別ランダマイズボタン（必ず6番目に配置）- 常に表示 */
.slot-container .individual-randomize-button {
  grid-row: 6;
  grid-column: 1;
  width: 100%;
  height: 100%; /* セル高さを完全に使用 */
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.slot-container .individual-randomize-button button {
  font-size: 11px;
  padding: 2px 8px;
  margin: 0;
  min-height: 18px;
  background-color: #ff9800;
  color: white;
  border: none;
  border-radius: 3px;
  cursor: pointer;
}

/* 動的記載エリアを横並びに設定 - 位置の修正 */
#dynamic-slot-area {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 12px;
  margin-top: 40px; /* 20px → 40px にさらに拡大 */
  padding-top: 30px; /* 20px → 30px に拡大 */
  padding-bottom: 24px;
  /* 点線を削除 */
  position: relative; /* 位置関係の制御のため */
  clear: both; /* 他の要素の影響を受けないように */
  order: 9999; /* 表示優先度を最低に設定（一番最後に表示） */
}

/* 動的記載エリア内のスロット要素のスタイル */
#dynamic-slot-area .slot {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 120px;
  max-width: 200px;
  border: 1px solid #ddd;
  padding: 8px;
  margin: 4px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
}

/* 動的エリア内のsubslotのスタイル */
#dynamic-slot-area .subslot {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 120px;
  border: 1px solid #eee;
  padding: 8px;
  margin: 4px;
}

/* 動的記載エリアのタイトルを削除 */
#dynamic-slot-area::before {
  display: none;
}

/* 全サブスロット展開エリアのコンテナスタイル */
[id$="-sub"] {
  margin-bottom: 24px; /* 展開エリア間の間隔を確保 */
  border-bottom: 1px solid #eee;
  padding-bottom: 16px;
}

/* 動的記載エリアのコンテナ要素のスタイル強化 */
#dynamic-area-container {
  margin-top: 200px; /* 120px → 200px に大幅拡大 */
  padding-top: 50px; /* 40px → 50px に拡大 */
  border-top: 2px solid #666; /* 区切り線を簡素化 */
  position: relative;
  clear: both;
  display: block;
  order: 9999; /* フレックスコンテナ内で確実に最後に配置 */
  z-index: 1; /* z-indexを低めに設定 */
  
  /* ビジュアルマーカーの追加（デバッグ用） */
  position: relative;
}

/* 動的エリアの前の区切り線を削除 */
#dynamic-area-container::before {
  /* グレーの実線を削除 */
  display: none;
}

/* 空のスロット非表示機構用のスタイル */
.empty-slot-hidden {
  display: none !important;
  visibility: hidden;
}

.display-at-top-hidden {
  display: none !important;
  visibility: hidden;
}

.empty-container-hidden {
  display: none !important;
  visibility: hidden;
}

/* 🔹 分離疑問詞エリアの非表示状態 */
#display-top-question-word.empty-slot-hidden,
#display-top-question-word.hidden {
  display: none !important;
  visibility: hidden !important;
}

/* 🔥 静的スロットエリアのスマート表示制御 */
/* 空のスロットを動的に非表示にするクラス */
.slot-container.empty-slot {
  display: none !important;
  visibility: hidden !important;
}

/* 静的スロットエリアの基本表示設定は上部のCSS Gridで定義済み */

/* 空スロット判定時に適用されるスタイル（グレー枠を完全に非表示） */
.slot-container.hidden-empty {
  display: none !important;
  visibility: hidden !important;
  border: none !important;
  padding: 0 !important;
  margin: 0 !important;
  width: 0 !important;
  height: 0 !important;
}

/* 古い分離疑問詞スタイルを削除 - 新しいGrid構造が下で定義済み */

/* 古い疑問詞要素スタイルを削除 - 新しいGrid構造が下で定義済み */

/* アニメーション効果（オプション - 将来の拡張用） */
.slot-container.fade-out {
  opacity: 0;
  transition: opacity 0.3s ease-out;
}

.slot-container.fade-in {
  opacity: 1;
  transition: opacity 0.3s ease-in;
}

/* 🎯 3要素表示制御システム - 全10スロット対応 */
/* S, Aux, V, M1, M2, C1, O1, O2, C2, M3スロットの画像・補助テキスト・例文テキストの個別表示制御 */

/* 画像非表示制御 */
.slot-container.hidden-image .slot-image,
.subslot.hidden-image .slot-image {
  display: none !important;
  visibility: hidden !important;
}

/* 補助テキスト非表示制御 */
.slot-container.hidden-auxtext .slot-text,
.subslot.hidden-auxtext .slot-text {
  display: none !important;
  visibility: hidden !important;
}

/* 例文テキスト非表示制御 */
.slot-container.hidden-text > .slot-phrase,
.subslot.hidden-text > .slot-phrase {
  display: none !important;
  visibility: hidden !important;
}

/* スロット個別制御用 - 各スロットに特化したクラス */
/* S スロット */
#slot-s.hidden-s-image .slot-image { display: none !important; }
#slot-s.hidden-s-auxtext .slot-text { display: none !important; }
#slot-s.hidden-s-text > .slot-phrase { display: none !important; }

/* Aux スロット */
#slot-aux.hidden-aux-image .slot-image { display: none !important; }
#slot-aux.hidden-aux-auxtext .slot-text { display: none !important; }
#slot-aux.hidden-aux-text > .slot-phrase { display: none !important; }

/* V スロット */
#slot-v.hidden-v-image .slot-image { display: none !important; }
#slot-v.hidden-v-auxtext .slot-text { display: none !important; }
#slot-v.hidden-v-text > .slot-phrase { display: none !important; }

/* M1 スロット */
#slot-m1.hidden-m1-image .slot-image { display: none !important; }
#slot-m1.hidden-m1-auxtext .slot-text { display: none !important; }
#slot-m1.hidden-m1-text > .slot-phrase { display: none !important; }

/* M2 スロット */
#slot-m2.hidden-m2-image .slot-image { display: none !important; }
#slot-m2.hidden-m2-auxtext .slot-text { display: none !important; }
#slot-m2.hidden-m2-text > .slot-phrase { display: none !important; }

/* C1 スロット */
#slot-c1.hidden-c1-image .slot-image { display: none !important; }
#slot-c1.hidden-c1-auxtext .slot-text { display: none !important; }
#slot-c1.hidden-c1-text > .slot-phrase { display: none !important; }

/* O1 スロット */
#slot-o1.hidden-o1-image .slot-image { display: none !important; }
#slot-o1.hidden-o1-auxtext .slot-text { display: none !important; }
#slot-o1.hidden-o1-text > .slot-phrase { display: none !important; }

/* O2 スロット */
#slot-o2.hidden-o2-image .slot-image { display: none !important; }
#slot-o2.hidden-o2-auxtext .slot-text { display: none !important; }
#slot-o2.hidden-o2-text > .slot-phrase { display: none !important; }

/* C2 スロット */
#slot-c2.hidden-c2-image .slot-image { display: none !important; }
#slot-c2.hidden-c2-auxtext .slot-text { display: none !important; }
#slot-c2.hidden-c2-text > .slot-phrase { display: none !important; }

/* M3 スロット */
#slot-m3.hidden-m3-image .slot-image { display: none !important; }
#slot-m3.hidden-m3-auxtext .slot-text { display: none !important; }
#slot-m3.hidden-m3-text > .slot-phrase { display: none !important; }

/* サブスロットも同様に制御 */
[id*="-sub-"].hidden-image .slot-image { display: none !important; }
[id*="-sub-"].hidden-auxtext .slot-text { display: none !important; }
[id*="-sub-"].hidden-text > .slot-phrase { display: none !important; }

/* 🎛️ サブスロット専用の表示・非表示制御クラス */
/* サブスロットの画像・テキスト・補助テキストの個別制御 */
.subslot.hidden-subslot-image .slot-image { display: none !important; }
.subslot.hidden-subslot-text .slot-phrase { display: none !important; }
.subslot.hidden-subslot-auxtext .slot-text { display: none !important; }

/* 🎯 .subslot-container対応版（新しいGrid構造） */
.subslot-container.hidden-subslot-image .slot-image { display: none !important; }
.subslot-container.hidden-subslot-text .slot-phrase { display: none !important; }
.subslot-container.hidden-subslot-auxtext .slot-text { display: none !important; }

/* より具体的なセレクタでの制御（IDベース） */
[id*="-sub-"].hidden-subslot-image .slot-image { display: none !important; }
[id*="-sub-"].hidden-subslot-text .slot-phrase { display: none !important; }
[id*="-sub-"].hidden-subslot-auxtext .slot-text { display: none !important; }

/* 🤖 画像自動非表示機構 */
/* プレースホルダー画像・エラー画像・無効画像の自動非表示 */
.slot-image.auto-hidden-image {
  display: none !important;
  visibility: hidden !important;
}

/* 🎨 メタタグ画像は常に表示（auto-hidden-image を上書き） */
.slot-image[data-meta-tag="true"] {
  display: block !important;
  visibility: visible !important;
  opacity: 1 !important;
  width: 160px !important; /* サイズも強制適用 */
  height: 150px !important;
  max-width: 160px !important;
  max-height: 150px !important;
  min-width: 120px !important;
  min-height: 120px !important;
}

/* 手動制御と自動制御の優先度制御 */
/* 手動制御が優先される（手動非表示が設定されている場合は自動制御を無効化） */
.slot-container.hidden-image .slot-image.auto-hidden-image,
.slot-container[class*="hidden-"][class*="-image"] .slot-image.auto-hidden-image {
  /* 手動制御が設定されている場合は自動制御クラスを無効化 */
  display: none !important; /* 手動制御の結果を優先 */
}

/* メタタグ画像は手動制御も上書き */
.slot-container.hidden-image .slot-image[data-meta-tag="true"],
.slot-container[class*="hidden-"][class*="-image"] .slot-image[data-meta-tag="true"] {
  display: block !important;
  visibility: visible !important;
  opacity: 1 !important;
}

/* 🎯 サブスロットコントロールパネルを下側に配置（静的エリア限定） */
/* #dynamic-slot-area の子孫ではない [id$="-sub"] 内のパネルのみを対象とする */
[id$="-sub"]:not(#dynamic-slot-area *) .subslot-visibility-panel {
  /* flexコンテナの幅を100%にすることで、強制的に新しい行に折り返させる */
  flex-basis: 100%;
  /* 他のサブスロットより後に表示されるように順序を最大にする */
  order: 999; 
  margin-top: 16px;
  
  /* 🆕 レイアウト調整：中央揃えと背景色変更（!importantで強制適用） */
  width: auto !important; /* 幅を自動調整 */
  margin-left: auto !important; /* 中央揃え */
  margin-right: auto !important; /* 中央揃え */
  background-color: white !important; /* 背景色を白に */
  padding: 10px !important; /* 内側余白 */
  border: 1px solid #ddd !important; /* 枠線を追加 */
  border-radius: 5px !important; /* 角を丸める */
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important; /* 上位パネルと影を合わせる */
}

/* 🔹 分離疑問詞エリアのスタイル - 7行構造でスペーサー行を追加 */
#display-top-question-word {
  display: none !important; /* 初期状態は非表示 */
  grid-template-rows: 30px 75px 10px 20px 25px 25px 25px; /* 7行構造：スペーサー行(10px)を追加 */
  grid-template-columns: 1fr;
  width: auto !important; /* 🆕 自動幅調整 */
  min-width: 140px !important; /* 🆕 最小幅 */
  max-width: none !important; /* 🆕 最大幅制限なし */
  height: 230px !important; /* 7行構造に合わせて高さ調整 */
  margin: 4px !important; /* スロットと同じマージン */
  padding: 10px !important; /* スロットと同じパディング */
  border: 1px solid #eee !important; /* スロットと同じボーダー */
  border-radius: 0 !important; /* スロットと同じ角丸なし */
  background-color: white !important; /* 背景色を白に統一 */
  align-items: center;
  justify-items: center;
  box-sizing: border-box !important;
  order: -1 !important; /* 他のスロットより前に表示 */
  transition: grid-template-rows 0.3s ease; /* 行の高さ変更時のアニメーション */
}

/* JavaScriptで表示された場合のみ有効になるスタイル */
#display-top-question-word.visible {
  display: grid !important;
}

/* 🔧 補助テキスト非表示時の行の高さ制御 */
#display-top-question-word.hide-auxtext {
  grid-template-rows: 30px 75px 10px 0px 25px 25px 25px; /* 補助テキスト行(4行目)を0pxに */
}

/* 疑問詞ラベル - Grid行1 */
#display-top-question-word .question-word-label {
  grid-row: 1;
  font-size: 18px; /* スロットラベルと同じサイズ */
  font-weight: bold;
  color: #333;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

/* 疑問詞画像エリア - Grid行2 */
#display-top-question-word .question-word-image {
  grid-row: 2;
  width: 90px; /* スロット画像と同じサイズ */
  height: 60px;
  background: transparent;
  border: 1px solid #f0f0f0; /* スロット画像と同じ枠 */
}

/* 疑問詞スペーサー行 - Grid行3（空白行） */
#display-top-question-word .question-word-spacer {
  grid-row: 3;
  grid-column: 1;
  width: 100%;
  height: 100%;
  /* 空白行なので背景なし */
}

/* 疑問詞日本語補助テキスト - Grid行4 */
#display-top-question-word .question-word-auxtext {
  grid-row: 4;
  grid-column: 1;
  font-size: 11px; /* スロットの補助テキストと同じサイズ */
  font-weight: 400;
  color: #777;
  text-align: center;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  margin: 0;
  padding: 4px; /* スロットの補助テキストと同じパディング */
  line-height: 1.1; /* スロットの補助テキストと同じ行高 */
}

/* 疑問詞英語テキスト - Grid行5 */
#display-top-question-word .question-word-text {
  grid-row: 5;
  font-size: 20px; /* 適度なサイズに調整 */
  font-weight: 600; /* スロットの英語テキストと同じ重み */
  color: #222;
  text-align: center;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  margin: 0;
  padding: 0;
  line-height: 1.2; /* スロットの英語テキストと同じ行高 */
  
  /* 🆕 例文テキストエリアを明確にする薄いオレンジの背景と黒い線 */
  background-color: #ffd6a5;
  border-top: 1px solid #000;
  border-bottom: 1px solid #000;
}

/* 疑問詞ボタンプレースホルダー - Grid行6,7（空のスペース） */
#display-top-question-word .question-word-button-placeholder {
  display: block;
  width: 100%;
  height: 100%;
}

#display-top-question-word .question-word-button-placeholder:nth-of-type(6) {
  grid-row: 6;
}

#display-top-question-word .question-word-button-placeholder:nth-of-type(7) {
  grid-row: 7;
}

#display-top-question-word .question-word-button-placeholder:nth-of-type(6) {
  grid-row: 6;
}

/* 🎯 サブスロット専用の4行CSS Gridレイアウト */
.subslot-container {
  /* CSS Gridで4行固定レイアウトを実装（詳細・ランダマイズボタンなし） */
  display: grid;
  grid-template-rows: 30px 180px 20px 25px; /* 画像行を120px → 180px にさらに拡大 */
  grid-template-columns: 1fr;
  gap: 4px; /* 行間の固定間隔 */
  align-items: center; /* 各セル内での中央揃え */
  justify-items: center; /* 各セル内での中央揃え */
  
  /* スタイリング */
  border: 1px solid #eee; /* 境界線を追加 */
  padding: 10px;
  margin: 4px;
  
  /* 動的幅調整システム */
  min-width: 120px; /* 最小幅 */
  width: auto; /* 自動幅調整 */
  max-width: 400px; /* 最大幅 */
  flex: 0 0 auto; /* flexアイテムとして自動サイズ */
  
  /* アニメーション */
  transition: opacity 0.2s ease-out, width 0.3s ease;
  
  /* 固定高さ（4行構造） */
  height: 279px; /* 30+180+20+25+gap+padding に更新 */
  box-sizing: border-box;
}

/* サブスロットのスロット名 - Grid行1 */
.subslot-container label {
  grid-row: 1;
  grid-column: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  font-size: 16px; /* 上位スロットより少し小さく */
  font-weight: bold;
  color: #333;
  text-align: center;
  margin: 0;
  padding: 0;
  line-height: 1.2;
}

/* サブスロットのイラスト - Grid行2 */
.subslot-container img.slot-image {
  grid-row: 2;
  grid-column: 1;
  width: 160px !important; /* 強制適用 */
  height: 150px !important; /* 強制適用 */
  max-width: 160px !important;
  max-height: 150px !important;
  min-width: 120px !important;
  min-height: 120px !important;
  object-fit: contain; /* cover → contain に変更（画像の縦横比を保持） */
  border: 1px solid #ddd;
  border-radius: 4px;
  margin: 0;
  padding: 0;
}

/* サブスロットの補助テキスト - Grid行3 */
.subslot-container .slot-text {
  grid-row: 3;
  grid-column: 1;
  font-size: 11px;
  font-weight: 400;
  color: #777;
  text-align: center;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  margin: 0;
  padding: 4px;
  line-height: 1.1;
}

/* サブスロットの例文テキスト - Grid行4（オレンジ背景・上下線） */
.subslot-container .slot-phrase {
  grid-row: 4;
  grid-column: 1;
  font-size: 14px; /* 上位スロットより少し小さく */
  font-weight: 600;
  color: #222;
  text-align: center;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  margin: 0;
  padding: 0;
  line-height: 1.2;
  
  /* 上位スロットと同じオレンジ背景・上下線 */
  background-color: #ffd6a5;
  border-top: 1px solid #000;
  border-bottom: 1px solid #000;
}

/* 🛡️ サブスロットエリアの安全制限 + 位置調整対応 */
.slot-wrapper[id$="-sub"] {
  /* 画面外に出ないように制限 */
  min-width: 300px !important;
  max-width: calc(100vw - 40px) !important;
  position: relative !important;
  /* 位置調整用：marginLeftによる調整を有効にする */
  left: 0 !important;
  transition: margin-left 0.3s ease !important;
  /* margin-leftは動的に設定されるため初期値は設定しない */
}

/* 🔧 位置調整のためのより具体的なセレクタ（JavaScriptからの変更を優先） */
div.slot-wrapper[id$="-sub"] {
  /* JavaScriptで設定されるmargin-leftを確実に適用 */
  margin-left: var(--dynamic-margin-left, 0px) !important;
}

/* 🔍 タブ連結エリアが表示されるように強制表示 */
.slot-wrapper.active-subslot-area[id$="-sub"] {
  /* タブ連結時は確実に表示 */
  display: flex !important;
  visibility: visible !important;
  opacity: 1 !important;
  /* 位置調整が適用されても画面内に留まるように */
  left: auto !important;
  right: auto !important;
  transform: none !important;
}

/* 🔗 エクセル風タブ連結システム（再実装版） */

/* 展開中の上位スロット（親）の基本スタイル */
.slot-container.active-parent-slot {
  background: rgba(173, 216, 230, 0.4) !important; /* 薄いブルー背景 */
  border: 2px solid #87CEEB !important; /* スカイブルー境界線 */
  border-bottom: none !important; /* 下部境界線を除去してサブスロットと連結 */
  border-radius: 8px 8px 0 0 !important; /* 上部のみ角丸 */
  position: relative !important;
  z-index: 3 !important; /* サブスロットエリアの上に表示 */
  margin-bottom: 0 !important; /* 下部マージンを除去 */
  transition: all 0.3s ease !important;
  box-shadow: 0 -2px 8px rgba(135, 206, 235, 0.3) !important; /* 上部シャドウで浮遊感 */
}

/* 🎨 親スロット用の拡張背景（包み込み効果） */
.slot-container.active-parent-slot::before {
  content: '' !important;
  position: absolute !important;
  top: -5px !important;
  left: -5px !important;
  right: -5px !important;
  bottom: -5px !important;
  background: linear-gradient(180deg, rgba(173, 216, 230, 0.3) 0%, rgba(173, 216, 230, 0.1) 100%) !important;
  border: 2px solid rgba(135, 206, 235, 0.6) !important;
  border-radius: 12px 12px 0 0 !important;
  border-bottom: none !important;
  z-index: -1 !important;
  pointer-events: none !important;
}

/* 展開中のサブスロットエリア全体のスタイル */
.slot-wrapper.active-subslot-area {
  background: rgba(173, 216, 230, 0.25) !important; /* 親より薄いブルー */
  border: 2px solid #87CEEB !important;
  border-top: none !important; /* 上部境界線を除去して親スロットと連結 */
  border-radius: 0 0 12px 12px !important; /* 下部のみ角丸 */
  position: relative !important;
  margin-top: -2px !important; /* 親スロットとの境界線を重複させる */
  padding: 20px !important;
  z-index: 2 !important;
  transition: all 0.3s ease !important;
  box-shadow: 
    0 -2px 4px rgba(135, 206, 235, 0.3),  /* 上向きの影で連結感を演出 */
    0 4px 8px rgba(0, 0, 0, 0.1) !important;
}

/* 🎨 サブスロットエリア用の拡張背景（包み込み効果の続き） */
.slot-wrapper.active-subslot-area::before {
  content: '' !important;
  position: absolute !important;
  top: -2px !important;
  left: -5px !important;
  right: -5px !important;
  bottom: -5px !important;
  background: linear-gradient(180deg, rgba(173, 216, 230, 0.1) 0%, rgba(173, 216, 230, 0.3) 100%) !important;
  border: 2px solid rgba(135, 206, 235, 0.6) !important;
  border-top: none !important;
  border-radius: 0 0 16px 16px !important;
  z-index: -1 !important;
  pointer-events: none !important;
}

/* サブスロットラベルのタブ風デザイン */
.subslot-label.tab-style {
  background: linear-gradient(135deg, #4CAF50, #45a049) !important;
  color: white !important;
  font-weight: bold !important;
  padding: 8px 16px !important;
  border-radius: 8px 8px 0 0 !important;
  margin: -20px -20px 15px -20px !important; /* ラベルをコンテナの端まで拡張 */
  text-align: center !important;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important;
  font-size: 14px !important;
  position: relative !important;
}
